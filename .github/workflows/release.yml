name: Release repository and copy to loonar-morpheus organization
on:
  release:
    types:
      - created

jobs:
  install-gh-cli:
    runs-on: ubuntu-22.04
    steps:
      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

  check-ci-status:
    runs-on: ubuntu-22.04
    needs: install-gh-cli
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check CI
        run: |
          CI_STATUS=$(gh run list --workflow=CI --branch=main --json status --jq '.[0].status')

          if [ "$CI_STATUS" != "completed" ]; then
            echo "CI workflow is not completed. Exiting..."
            exit 1
          fi
          CI_CONCLUSION=$(gh run list --workflow=CI --branch=main --json conclusion --jq '.[0].conclusion')
          if [ "$CI_CONCLUSION" != "success" ]; then
            echo "CI workflow did not succeed. Exiting..."
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.SOURCE_PAT }}
  
  copy-repo:
    runs-on: ubuntu-22.04
    needs: check-ci-status

    steps:
      - name: Checkout Source Repository
        uses: actions/checkout@v3
      
      - name: Check if Destination Repository Exists
        id: check_repo
        run: |
          if gh repo view "${{ vars.DESTINATION_ORG }}/$GITHUB_REPOSITORY" > /dev/null 2>&1; then
            echo "result=repository exists"
            echo "::set-output name=REPO_EXISTS::true"
          else
            echo "repository does not exist"
            echo "::set-output name=REPO_EXISTS::false"
          fi
        env:
          GH_TOKEN: ${{ secrets.SOURCE_PAT }}
  
      - name: Create Destination Repository if it Doesn't Exist
        if: steps.check_repo.outputs.REPO_EXISTS == 'false'
        run: | 
            echo "Creating repository: ${{ vars.DESTINATION_ORG }}/$GITHUB_REPOSITORY"
            echo ${{ secrets.SOURCE_PAT }} | gh auth login --with-token
            gh repo create "${{ vars.DESTINATION_ORG }}/$GITHUB_REPOSITORY" --private
        env:
          GH_TOKEN: ${{ secrets.SOURCE_PAT }}

      - name: Create Bare Clone of Source Repository
        run: git clone --bare https://github.com/${{ vars.SOURCE_ORG }}/${{ github.event.repository.name }}.git
        env:
          GH_TOKEN: ${{ secrets.SOURCE_PAT }}

      - name: Set Repository Directory Name
        run: echo "REPO_DIR=$(basename https://github.com/${{ vars.SOURCE_ORG }}/${{ github.event.repository.name }}.git .git)" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.SOURCE_PAT }}

      - name: Mirror Push to Destination Repository
        run: |
          cd ${REPO_DIR}.git
          git push --mirror https://github.com/${{ vars.DESTINATION_ORG }}/$GITHUB_REPOSITORY.git
        env:
          GH_TOKEN: ${{ secrets.SOURCE_PAT }}
  